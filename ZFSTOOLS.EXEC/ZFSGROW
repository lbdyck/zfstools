/* --------------------  rexx procedure  -------------------- *
 * Name:      zfsgrow                                         *
 *                                                            *
 * Function:  Grow an existing zFS dataset                    *
 *                                                            *
 * Syntax:    %zfsgrow zfsdsn                                 *
 *                                                            *
 *            zfsdsn is optional                              *
 *                                                            *
 * Author:    Lionel B. Dyck                                  *
 *                                                            *
 * Notes:     This function requires the user have            *
 *            SuperUser authority AND that the zFS            *
 *            be mounted.                                     *
 *                                                            *
 * History:                                                   *
 *            06/23/25 - Remove need for STEMEDIT             *
 *                     - allow passed zfsdsn                  *
 *            06/11/25 - improve reporting                    *
 *            03/14/25 - Replace sysdsn with listdsi          *
 *            07/07/24 - Replace STEMView with STEMEdit       *
 *            05/16/16 - Creation                             *
 *                                                            *
 * ---------------------------------------------------------- */

 arg zfsdsn

 parse value '' with null

 Address ISPExec
 do forever
    "Display Panel(zfsgrow)"
    if rc > 4 then exit 0
    if size = null
       then call get_size
       else call do_it
    Address ISPExec
    end

Do_It:
/* ------------------------------------ *
 * Verify that the requested zFS exists *
 * ------------------------------------ */
 x = listdsi(zfsdsn)
 if x > 4 then do
    zedsmsg = null
    zedlmsg = sysmsglvl2
    "Setmsg msg(isrz001)"
    return
    end

 Address TSO
 option = 'grow -aggregate' sysdsname '-size' size
 address syscall 'geteuid'
 myeuid=retval
 Address syscall "seteuid 0"
 cmd = "echo zfsadm" option ,
       "&& echo" copies('-',70) ,
       "&& zfsadm" option
 rc = bpxwunix(cmd,,stdout.,stderr.)
 Address syscall "seteuid" myeuid
 Address ISPExec 'vget (zfsview)'
 dd = 'zfs' || random(9999)
 'alloc f('dd') unit(3390) spa(15,15) tr' ,
   'recfm(v b) lrecl(255) blksize(0)'
 'execio * diskw' dd '(stem stdout.'
 if stderr.0 > 0 then do
    do i = 1 to stderr.0
       stem.i = stderr.i
       end
    i = stderr.0 + 1
    stem.i = 'The error may be because the zFS is NOT mounted.'
    i = i + 1
    stem.i = 'Verify that it is mounted and try again. Otherwise'
    i = i + 1
    stem.i = 'look up the error code and correct.'
    stem.0 = i
    'execio * diskw' dd '(stem stem.'
    end
 'execio 0 diskw' dd '(finis'

 Address ISPExec
  'lminit dataid(ddb) ddname('dd')'
  zfsview 'dataid('ddb')'
  'lmfree dataid('ddb')'
  Address TSO ,
  'free f('dd')'
 Return

 FixUp_DSN:
   if left(zfsdsn,1) = "'" then return
   x = listdsi(zfsdsn)
   zfsdsn = "'"sysdsname"'"
   Return

 Get_Size:
   call fixup_dsn
   hit = 0
   if size = null then do
     option = 'fsinfo -aggregate' zfsdsn '-full'
     rc = bpxwunix("zfsadm" option,,s.,e.)
     do i = 1 to s.0
       if pos('  Size:',s.i) > 0 then do
          parse value s.i with . 'Size:'csize .
          csize = left(csize,length(csize)-1)
          end
       if pos('  Status:',s.i) > 0 then
          if pos('NM',s.i) > 0 then do
             csize = 'Not Mounted'
             return
             end
     end
     hit = 1
     size = csize
   end
   Return
